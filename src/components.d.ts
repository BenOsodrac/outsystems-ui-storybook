/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { alignment, border } from "./components/globalEnum";
import { RangeValue } from "./components/range-slider/interface";
export namespace Components {
    interface OsuiButton {
    }
    interface OsuiCard {
        "alignment": alignment;
        "backgroundColor": string;
        "border": border;
        "reverseColumn": boolean;
        "showContent": boolean;
        "showFooter": boolean;
        "showHeader": boolean;
    }
    interface OsuiRangeSlider {
        "activeBarStart"?: number;
        "debounce"?: number;
        "disabled": boolean;
        "interval": boolean;
        "label"?: string;
        "labelPlacement": 'start' | 'end' | 'fixed';
        "max": number;
        "min": number;
        "name": string;
        "pin": boolean;
        "snaps": boolean;
        "step": number;
        "ticks": boolean;
        "value": RangeValue;
    }
    interface OsuiRating {
        "editable": boolean;
        "getValue": () => Promise<number>;
        "scale": number;
        "setValue": (value: number) => Promise<void>;
        "value": number;
    }
}
declare global {
    interface HTMLOsuiButtonElement extends Components.OsuiButton, HTMLStencilElement {
    }
    var HTMLOsuiButtonElement: {
        prototype: HTMLOsuiButtonElement;
        new (): HTMLOsuiButtonElement;
    };
    interface HTMLOsuiCardElement extends Components.OsuiCard, HTMLStencilElement {
    }
    var HTMLOsuiCardElement: {
        prototype: HTMLOsuiCardElement;
        new (): HTMLOsuiCardElement;
    };
    interface HTMLOsuiRangeSliderElement extends Components.OsuiRangeSlider, HTMLStencilElement {
    }
    var HTMLOsuiRangeSliderElement: {
        prototype: HTMLOsuiRangeSliderElement;
        new (): HTMLOsuiRangeSliderElement;
    };
    interface HTMLOsuiRatingElement extends Components.OsuiRating, HTMLStencilElement {
    }
    var HTMLOsuiRatingElement: {
        prototype: HTMLOsuiRatingElement;
        new (): HTMLOsuiRatingElement;
    };
    interface HTMLElementTagNameMap {
        "osui-button": HTMLOsuiButtonElement;
        "osui-card": HTMLOsuiCardElement;
        "osui-range-slider": HTMLOsuiRangeSliderElement;
        "osui-rating": HTMLOsuiRatingElement;
    }
}
declare namespace LocalJSX {
    interface OsuiButton {
    }
    interface OsuiCard {
        "alignment"?: alignment;
        "backgroundColor"?: string;
        "border"?: border;
        "reverseColumn"?: boolean;
        "showContent"?: boolean;
        "showFooter"?: boolean;
        "showHeader"?: boolean;
    }
    interface OsuiRangeSlider {
        "activeBarStart"?: number;
        "debounce"?: number;
        "disabled"?: boolean;
        "interval"?: boolean;
        "label"?: string;
        "labelPlacement"?: 'start' | 'end' | 'fixed';
        "max"?: number;
        "min"?: number;
        "name"?: string;
        "pin"?: boolean;
        "snaps"?: boolean;
        "step"?: number;
        "ticks"?: boolean;
        "value"?: RangeValue;
    }
    interface OsuiRating {
        "editable"?: boolean;
        "scale"?: number;
        "value"?: number;
    }
    interface IntrinsicElements {
        "osui-button": OsuiButton;
        "osui-card": OsuiCard;
        "osui-range-slider": OsuiRangeSlider;
        "osui-rating": OsuiRating;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "osui-button": LocalJSX.OsuiButton & JSXBase.HTMLAttributes<HTMLOsuiButtonElement>;
            "osui-card": LocalJSX.OsuiCard & JSXBase.HTMLAttributes<HTMLOsuiCardElement>;
            "osui-range-slider": LocalJSX.OsuiRangeSlider & JSXBase.HTMLAttributes<HTMLOsuiRangeSliderElement>;
            "osui-rating": LocalJSX.OsuiRating & JSXBase.HTMLAttributes<HTMLOsuiRatingElement>;
        }
    }
}
